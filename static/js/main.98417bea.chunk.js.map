{"version":3,"sources":["blockchain/web3.js","logo.svg","blockchain/MultiSenderInterface.js","blockchain/ERC20Interface.js","blockchain/functions.js","pages/sendBNB.js","pages/batchBNB.js","pages/sendToken.js","pages/batchToken.js","pages/home.js","App.js","reportWebVitals.js","index.js"],"names":["web3","Web3","require","window","ethereum","givenProvider","alert","senderAddress","Interface","eth","Contract","multiSendABI","abi","_address","ERC20ABI","sendEthBulk","_to","_value","a","value","finalAmounts","map","el","push","toString","senderInterface","instance","console","log","methods","bulksendEth","send","from","selectedAddress","receipt","Ethsend","length","sendEth","sendTokenbulk","_tokenAddress","bulksendToken","TokenSend","sendToken","AproveSender","_amount","utils","toWei","ERC20Interface","increaseAllowance","SendBNB","useState","setAmount","type","onChange","e","target","onPaste","onClick","BatchBNB","SendToken","tokenAddress","setTokenAddress","BatchToken","Home","page","setPage","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98417bea.chunk.js","sourcesContent":["const Web3 = require(\"web3\");\r\n\r\nlet web3;\r\n\r\nif (typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\") {\r\n  //we are in the browser and metamask is running\r\n  web3 = new Web3(Web3.givenProvider);\r\n} else {\r\n  //we are on the server or the user don't have metamask\r\n  window.alert(\"Please Install Metamask\");\r\n}\r\n\r\nexport default web3;\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import web3 from \"./web3\";\r\nimport multiSendABI from \"./abi.json\";\r\n\r\nexport const senderAddress = \"0x3457EbBE22064f0aC5a1C46Fc00b326fB7013cA2\";\r\n\r\nfunction Interface() {\r\n  return new web3.eth.Contract(multiSendABI.abi, senderAddress);\r\n}\r\n\r\nexport default Interface;\r\n","import web3 from \"./web3\";\r\nimport ERC20ABI from \"./erc20Abi.json\";\r\n\r\nfunction Interface(_address) {\r\n  return new web3.eth.Contract(ERC20ABI.abi, _address);\r\n}\r\n\r\nexport default Interface;\r\n","import web3 from \"./web3\";\r\nimport senderInterface, { senderAddress } from \"./MultiSenderInterface\";\r\nimport ERC20Interface from \"./ERC20Interface\";\r\n\r\nexport const sendEthBulk = async (_to, _value) => {\r\n  try {\r\n    let value = 10000000000000000;\r\n    let finalAmounts = [];\r\n    _value.map((el) => {\r\n      value = value + el;\r\n      finalAmounts.push(el.toString());\r\n    });\r\n    let instance = await senderInterface();\r\n    console.log(finalAmounts, value, _to, _value);\r\n    let receipt = await instance.methods\r\n      .bulksendEth(_to, finalAmounts)\r\n      .send({ value: value.toString(), from: window.ethereum.selectedAddress });\r\n\r\n    console.log(receipt);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const Ethsend = async (_to, _value) => {\r\n  try {\r\n    let value = _value * _to.length + 10000000000000000;\r\n    console.log(_to, _value, value);\r\n    let instance = await senderInterface();\r\n    let receipt = await instance.methods\r\n      .sendEth(_to, _value.toString())\r\n      .send({ value: value.toString(), from: window.ethereum.selectedAddress });\r\n\r\n    console.log(receipt);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const sendTokenbulk = async (_tokenAddress, _to, _value) => {\r\n  try {\r\n    let value = 10000000000000000;\r\n    let finalAmounts = [];\r\n    _value.map((el) => {\r\n      finalAmounts.push(el.toString());\r\n    });\r\n    let instance = await senderInterface();\r\n    console.log(_tokenAddress, _to, finalAmounts);\r\n    let receipt = await instance.methods\r\n      .bulksendToken(_tokenAddress, _to, finalAmounts)\r\n      .send({ value: value.toString(), from: window.ethereum.selectedAddress });\r\n\r\n    console.log(receipt);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const TokenSend = async (_tokenAddress, _to, _value) => {\r\n  try {\r\n    let value = 10000000000000000;\r\n    let instance = await senderInterface();\r\n    console.log(_tokenAddress, _to, _value.toString());\r\n    let receipt = await instance.methods\r\n      .sendToken(_tokenAddress, _to, _value.toString())\r\n      .send({ value: value.toString(), from: window.ethereum.selectedAddress });\r\n\r\n    console.log(receipt);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const AproveSender = async (_tokenAddress) => {\r\n  try {\r\n    let _amount = web3.utils.toWei(\"1000000\");\r\n    console.log(_amount);\r\n\r\n    let instance = await ERC20Interface(_tokenAddress);\r\n    let receipt = await instance.methods\r\n      .increaseAllowance(senderAddress, _amount)\r\n      .send({\r\n        from: window.ethereum.selectedAddress,\r\n      });\r\n\r\n    console.log(receipt);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Ethsend } from \"../blockchain/functions\";\r\n\r\nfunction SendBNB() {\r\n  const _to = [];\r\n  const [_amount, setAmount] = useState();\r\n  return (\r\n    <div>\r\n      <h2>MultiSend BNB</h2>\r\n\r\n      <h4>Amount</h4>\r\n      <input\r\n        type=\"number\"\r\n        onChange={(e) => {\r\n          setAmount(e.target.value * 10 ** 18);\r\n        }}\r\n      />\r\n      <h4>Address 1</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => {\r\n          _to[0] = e.target.value;\r\n        }}\r\n        onChange={(e) => {\r\n          _to[0] = e.target.value;\r\n        }}\r\n      />\r\n      <h4>Address 2</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => {\r\n          _to[1] = e.target.value;\r\n        }}\r\n        onChange={(e) => {\r\n          _to[1] = e.target.value;\r\n        }}\r\n      />\r\n\r\n      <h4>Address 3</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => {\r\n          _to[2] = e.target.value;\r\n        }}\r\n        onChange={(e) => {\r\n          _to[2] = e.target.value;\r\n        }}\r\n      />\r\n\r\n      <h4>Address 4</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => {\r\n          _to[3] = e.target.value;\r\n        }}\r\n        onChange={(e) => {\r\n          _to[3] = e.target.value;\r\n        }}\r\n      />\r\n\r\n      <br />\r\n      <button onClick={() => Ethsend(_to, _amount)}>Send!</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SendBNB;\r\n","import React from \"react\";\r\nimport { sendEthBulk } from \"../blockchain/functions\";\r\n\r\nfunction BatchBNB() {\r\n  const _to = [];\r\n  const _amount = [];\r\n\r\n  return (\r\n    <div>\r\n      <h2>Bulk MultiSend BNB</h2>\r\n\r\n      <br />\r\n      <h4>Address 1</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => {\r\n          _to[0] = e.target.value;\r\n        }}\r\n        onChange={(e) => {\r\n          _to[0] = e.target.value;\r\n        }}\r\n      />\r\n      <h4>Amount 1</h4>\r\n      <input\r\n        type=\"number\"\r\n        onChange={(e) => {\r\n          _amount[0] = e.target.value * 10 ** 18;\r\n        }}\r\n      />\r\n\r\n      <h4>Address 2</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => {\r\n          _to[1] = e.target.value;\r\n        }}\r\n        onChange={(e) => {\r\n          _to[1] = e.target.value;\r\n        }}\r\n      />\r\n      <h4>Amount 2</h4>\r\n      <input\r\n        type=\"number\"\r\n        onChange={(e) => {\r\n          _amount[1] = e.target.value * 10 ** 18;\r\n        }}\r\n      />\r\n\r\n      <h4>Address 3</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => {\r\n          _to[2] = e.target.value;\r\n        }}\r\n        onChange={(e) => {\r\n          _to[2] = e.target.value;\r\n        }}\r\n      />\r\n      <h4>Amount 3</h4>\r\n      <input\r\n        type=\"number\"\r\n        onChange={(e) => {\r\n          _amount[2] = e.target.value * 10 ** 18;\r\n        }}\r\n      />\r\n\r\n      <h4>Address 4</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => {\r\n          _to[3] = e.target.value;\r\n        }}\r\n        onChange={(e) => {\r\n          _to[3] = e.target.value;\r\n        }}\r\n      />\r\n      <h4>Amount 4</h4>\r\n      <input\r\n        type=\"number\"\r\n        onChange={(e) => {\r\n          _amount[3] = e.target.value * 10 ** 18;\r\n        }}\r\n      />\r\n      <br />\r\n      <button onClick={() => sendEthBulk(_to, _amount)}>Send!</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BatchBNB;\r\n","import React, { useState } from \"react\";\r\nimport { TokenSend, AproveSender } from \"../blockchain/functions\";\r\n\r\nfunction SendToken() {\r\n  const [tokenAddress, setTokenAddress] = useState(\"\");\r\n  const _to = [];\r\n  const [_amount, setAmount] = useState();\r\n  return (\r\n    <div>\r\n      <h2>MultiSend Token</h2>\r\n      <h4>Token Address</h4>\r\n      <input type=\"text\" onChange={(e) => setTokenAddress(e.target.value)} />\r\n      <br />\r\n      <h4>Amount</h4>\r\n      <input\r\n        type=\"number\"\r\n        onChange={(e) => {\r\n          setAmount(e.target.value * 10 ** 18);\r\n        }}\r\n      />\r\n      <h4>Address 1</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => {\r\n          _to[0] = e.target.value;\r\n        }}\r\n        onChange={(e) => {\r\n          _to[0] = e.target.value;\r\n        }}\r\n      />\r\n      <h4>Address 2</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => {\r\n          _to[1] = e.target.value;\r\n        }}\r\n        onChange={(e) => {\r\n          _to[1] = e.target.value;\r\n        }}\r\n      />\r\n\r\n      <h4>Address 3</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => {\r\n          _to[2] = e.target.value;\r\n        }}\r\n        onChange={(e) => {\r\n          _to[2] = e.target.value;\r\n        }}\r\n      />\r\n\r\n      <h4>Address 4</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => {\r\n          _to[3] = e.target.value;\r\n        }}\r\n        onChange={(e) => {\r\n          _to[3] = e.target.value;\r\n        }}\r\n      />\r\n\r\n      <br />\r\n      <button onClick={() => TokenSend(tokenAddress, _to, _amount)}>\r\n        Send!\r\n      </button>\r\n      <br />\r\n      <button onClick={() => AproveSender(tokenAddress)}>Aprove Token!</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SendToken;\r\n","import React, { useState } from \"react\";\r\nimport { sendTokenbulk, AproveSender } from \"../blockchain/functions\";\r\n\r\nfunction BatchToken() {\r\n  const [tokenAddress, setTokenAddress] = useState(\"\");\r\n  const _to = [];\r\n  const _amount = [];\r\n\r\n  return (\r\n    <div>\r\n      <h2>Bulk MultiSend Token</h2>\r\n      <h4>Token Address</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => setTokenAddress(e.target.value)}\r\n        onChange={(e) => setTokenAddress(e.target.value)}\r\n      />\r\n      <br />\r\n      <h4>Address 1</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => {\r\n          _to[0] = e.target.value;\r\n        }}\r\n        onChange={(e) => {\r\n          _to[0] = e.target.value;\r\n        }}\r\n      />\r\n      <h4>Amount 1</h4>\r\n      <input\r\n        type=\"number\"\r\n        onChange={(e) => {\r\n          _amount[0] = e.target.value * 10 ** 18;\r\n        }}\r\n      />\r\n\r\n      <h4>Address 2</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => {\r\n          _to[1] = e.target.value;\r\n        }}\r\n        onChange={(e) => {\r\n          _to[1] = e.target.value;\r\n        }}\r\n      />\r\n      <h4>Amount 2</h4>\r\n      <input\r\n        type=\"number\"\r\n        onChange={(e) => {\r\n          _amount[1] = e.target.value * 10 ** 18;\r\n        }}\r\n      />\r\n\r\n      <h4>Address 3</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => {\r\n          _to[2] = e.target.value;\r\n        }}\r\n        onChange={(e) => {\r\n          _to[2] = e.target.value;\r\n        }}\r\n      />\r\n      <h4>Amount 3</h4>\r\n      <input\r\n        type=\"number\"\r\n        onChange={(e) => {\r\n          _amount[2] = e.target.value * 10 ** 18;\r\n        }}\r\n      />\r\n\r\n      <h4>Address 4</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => {\r\n          _to[3] = e.target.value;\r\n        }}\r\n        onChange={(e) => {\r\n          _to[3] = e.target.value;\r\n        }}\r\n      />\r\n      <h4>Amount 4</h4>\r\n      <input\r\n        type=\"number\"\r\n        onChange={(e) => {\r\n          _amount[3] = e.target.value * 10 ** 18;\r\n        }}\r\n      />\r\n      <br />\r\n      <button onClick={() => sendTokenbulk(tokenAddress, _to, _amount)}>\r\n        Send!\r\n      </button>\r\n      <br />\r\n      <button onClick={() => AproveSender(tokenAddress)}>Aprove Token!</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BatchToken;\r\n","import React, { useState } from \"react\";\r\nimport SendBNB from \"./sendBNB\";\r\nimport BatchBNB from \"./batchBNB\";\r\nimport SendToken from \"./sendToken\";\r\nimport BatchToken from \"./batchToken\";\r\n\r\nfunction Home() {\r\n  const [page, setPage] = useState(0);\r\n  return (\r\n    <div>\r\n      <button onClick={() => setPage(0)}>Send BNB</button>\r\n      <button onClick={() => setPage(1)}>Batch Send BNB</button>\r\n      <button onClick={() => setPage(2)}>Send Token</button>\r\n      <button onClick={() => setPage(3)}>Batch Send Token</button>\r\n      {page === 0 && <SendBNB />}\r\n      {page === 1 && <BatchBNB />}\r\n      {page === 2 && <SendToken />}\r\n      {page === 3 && <BatchToken />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Home from \"./pages/home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}