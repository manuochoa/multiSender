{"version":3,"sources":["blockchain/web3.js","logo.svg","blockchain/MultiSenderInterface.js","blockchain/ERC20Interface.js","blockchain/functions.js","pages/sendBNB.js","pages/batchBNB.js","pages/sendToken.js","pages/batchToken.js","pages/home.js","App.js","reportWebVitals.js","index.js"],"names":["web3","Web3","require","window","ethereum","givenProvider","alert","senderAddress","Interface","eth","Contract","multiSendABI","abi","_address","ERC20ABI","sendEthBulk","_to","_value","a","value","finalAmounts","map","el","Number","push","toString","senderInterface","instance","console","log","methods","bulksendEth","send","from","selectedAddress","receipt","Ethsend","length","sendEth","sendTokenbulk","_tokenAddress","bulksendToken","TokenSend","sendToken","AproveSender","_amount","utils","toWei","ERC20Interface","increaseAllowance","SendBNB","useState","setAmount","type","onChange","e","target","onPaste","onClick","toChecksumAddress","checkAddressChecksum","BatchBNB","set_to","set_amount","handleFile","file","files","reader","FileReader","onload","evt","bstr","result","wb","XLSX","wsname","SheetNames","ws","Sheets","dataString","dataStringLines","split","headers","list","i","row","obj","j","d","substring","Object","values","filter","x","columns","c","name","selector","addresses","amounts","address","Address","Amount","error","processData","sheet_to_csv","header","readAsBinaryString","SendToken","tokenAddress","setTokenAddress","BatchToken","Home","page","setPage","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38e6227a.chunk.js","sourcesContent":["const Web3 = require(\"web3\");\r\n\r\nlet web3;\r\n\r\nif (typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\") {\r\n  //we are in the browser and metamask is running\r\n  web3 = new Web3(Web3.givenProvider);\r\n} else {\r\n  //we are on the server or the user don't have metamask\r\n  window.alert(\"Please Install Metamask\");\r\n}\r\n\r\nexport default web3;\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import web3 from \"./web3\";\r\nimport multiSendABI from \"./abi.json\";\r\n\r\nexport const senderAddress = \"0x3457EbBE22064f0aC5a1C46Fc00b326fB7013cA2\";\r\n\r\nfunction Interface() {\r\n  return new web3.eth.Contract(multiSendABI.abi, senderAddress);\r\n}\r\n\r\nexport default Interface;\r\n","import web3 from \"./web3\";\r\nimport ERC20ABI from \"./erc20Abi.json\";\r\n\r\nfunction Interface(_address) {\r\n  return new web3.eth.Contract(ERC20ABI.abi, _address);\r\n}\r\n\r\nexport default Interface;\r\n","import web3 from \"./web3\";\r\nimport senderInterface, { senderAddress } from \"./MultiSenderInterface\";\r\nimport ERC20Interface from \"./ERC20Interface\";\r\n\r\nexport const sendEthBulk = async (_to, _value) => {\r\n  try {\r\n    let value = 10000000000000000;\r\n    let finalAmounts = [];\r\n    _value.map((el) => {\r\n      value = value + Number(el);\r\n      finalAmounts.push(el.toString());\r\n    });\r\n    let instance = await senderInterface();\r\n    console.log(finalAmounts, value, _to, _value);\r\n    let receipt = await instance.methods\r\n      .bulksendEth(_to, finalAmounts)\r\n      .send({ value: value.toString(), from: window.ethereum.selectedAddress });\r\n\r\n    console.log(receipt);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const Ethsend = async (_to, _value) => {\r\n  try {\r\n    let value = _value * _to.length + 10000000000000000;\r\n    console.log(_to, _value, value);\r\n    let instance = await senderInterface();\r\n    let receipt = await instance.methods\r\n      .sendEth(_to, _value.toString())\r\n      .send({ value: value.toString(), from: window.ethereum.selectedAddress });\r\n\r\n    console.log(receipt);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const sendTokenbulk = async (_tokenAddress, _to, _value) => {\r\n  try {\r\n    let value = 10000000000000000;\r\n    let finalAmounts = [];\r\n    _value.map((el) => {\r\n      finalAmounts.push(el.toString());\r\n    });\r\n    let instance = await senderInterface();\r\n    console.log(_tokenAddress, _to, finalAmounts);\r\n    let receipt = await instance.methods\r\n      .bulksendToken(_tokenAddress, _to, finalAmounts)\r\n      .send({ value: value.toString(), from: window.ethereum.selectedAddress });\r\n\r\n    console.log(receipt);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const TokenSend = async (_tokenAddress, _to, _value) => {\r\n  try {\r\n    let value = 10000000000000000;\r\n    let instance = await senderInterface();\r\n    console.log(_tokenAddress, _to, _value.toString());\r\n    let receipt = await instance.methods\r\n      .sendToken(_tokenAddress, _to, _value.toString())\r\n      .send({ value: value.toString(), from: window.ethereum.selectedAddress });\r\n\r\n    console.log(receipt);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const AproveSender = async (_tokenAddress) => {\r\n  try {\r\n    let _amount = web3.utils.toWei(\"1000000\");\r\n    console.log(_amount);\r\n\r\n    let instance = await ERC20Interface(_tokenAddress);\r\n    let receipt = await instance.methods\r\n      .increaseAllowance(senderAddress, _amount)\r\n      .send({\r\n        from: window.ethereum.selectedAddress,\r\n      });\r\n\r\n    console.log(receipt);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Ethsend } from \"../blockchain/functions\";\r\n\r\nfunction SendBNB() {\r\n  const _to = [];\r\n  const [_amount, setAmount] = useState();\r\n\r\n  return (\r\n    <div>\r\n      <h2>MultiSend BNB</h2>\r\n\r\n      <h4>Amount</h4>\r\n      <input\r\n        type=\"number\"\r\n        onChange={(e) => {\r\n          setAmount(e.target.value * 10 ** 18);\r\n        }}\r\n      />\r\n      <h4>Address 1</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => {\r\n          _to[0] = e.target.value;\r\n        }}\r\n        onChange={(e) => {\r\n          _to[0] = e.target.value;\r\n        }}\r\n      />\r\n      <h4>Address 2</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => {\r\n          _to[1] = e.target.value;\r\n        }}\r\n        onChange={(e) => {\r\n          _to[1] = e.target.value;\r\n        }}\r\n      />\r\n\r\n      <h4>Address 3</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => {\r\n          _to[2] = e.target.value;\r\n        }}\r\n        onChange={(e) => {\r\n          _to[2] = e.target.value;\r\n        }}\r\n      />\r\n\r\n      <h4>Address 4</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => {\r\n          _to[3] = e.target.value;\r\n        }}\r\n        onChange={(e) => {\r\n          _to[3] = e.target.value;\r\n        }}\r\n      />\r\n\r\n      <br />\r\n      <button onClick={() => Ethsend(_to, _amount)}>Send!</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SendBNB;\r\n","import React, { useState } from \"react\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { sendEthBulk } from \"../blockchain/functions\";\r\nconst {\r\n  toChecksumAddress,\r\n  checkAddressChecksum,\r\n} = require(\"ethereum-checksum-address\");\r\n\r\nfunction BatchBNB() {\r\n  const [_to, set_to] = useState([]);\r\n  const [_amount, set_amount] = useState([]);\r\n\r\n  const processData = (dataString) => {\r\n    const dataStringLines = dataString.split(/\\r\\n|\\n/);\r\n    const headers = dataStringLines[0].split(\r\n      /,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/\r\n    );\r\n\r\n    const list = [];\r\n    for (let i = 1; i < dataStringLines.length; i++) {\r\n      const row = dataStringLines[i].split(\r\n        /,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/\r\n      );\r\n      if (headers && row.length == headers.length) {\r\n        const obj = {};\r\n        for (let j = 0; j < headers.length; j++) {\r\n          let d = row[j];\r\n          if (d.length > 0) {\r\n            if (d[0] == '\"') d = d.substring(1, d.length - 1);\r\n            if (d[d.length - 1] == '\"') d = d.substring(d.length - 2, 1);\r\n          }\r\n          if (headers[j]) {\r\n            obj[headers[j]] = d;\r\n          }\r\n        }\r\n\r\n        // remove the blank rows\r\n        if (Object.values(obj).filter((x) => x).length > 0) {\r\n          list.push(obj);\r\n        }\r\n      }\r\n    }\r\n\r\n    // prepare columns list from headers\r\n    const columns = headers.map((c) => ({\r\n      name: c,\r\n      selector: c,\r\n    }));\r\n    console.log(\"list\", list, \"columns\", columns);\r\n    let addresses = [];\r\n    let amounts = [];\r\n    list.map((el) => {\r\n      let address;\r\n      let isValid;\r\n      try {\r\n        address = toChecksumAddress(el.Address);\r\n        isValid = checkAddressChecksum(address);\r\n        if (isValid && el.Amount > 0) {\r\n          addresses.push(address);\r\n          amounts.push((el.Amount * 10 ** 18).toString());\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    });\r\n    console.log(amounts, addresses);\r\n\r\n    set_amount(amounts);\r\n\r\n    set_to(addresses);\r\n  };\r\n\r\n  function handleFile(e) {\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onload = (evt) => {\r\n      /* Parse data */\r\n      const bstr = evt.target.result;\r\n      const wb = XLSX.read(bstr, { type: \"binary\" });\r\n      /* Get first worksheet */\r\n      const wsname = wb.SheetNames[0];\r\n      const ws = wb.Sheets[wsname];\r\n      /* Convert array of arrays */\r\n      const data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\r\n      processData(data);\r\n    };\r\n    reader.readAsBinaryString(file);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Bulk MultiSend BNB</h2>\r\n      <input type=\"file\" onChange={(e) => handleFile(e)} />\r\n\r\n      <br />\r\n      <h4>Address 1</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => {\r\n          _to[0] = e.target.value;\r\n        }}\r\n        onChange={(e) => {\r\n          _to[0] = e.target.value;\r\n        }}\r\n      />\r\n      <h4>Amount 1</h4>\r\n      <input\r\n        type=\"number\"\r\n        onChange={(e) => {\r\n          _amount[0] = e.target.value * 10 ** 18;\r\n        }}\r\n      />\r\n\r\n      <h4>Address 2</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => {\r\n          _to[1] = e.target.value;\r\n        }}\r\n        onChange={(e) => {\r\n          _to[1] = e.target.value;\r\n        }}\r\n      />\r\n      <h4>Amount 2</h4>\r\n      <input\r\n        type=\"number\"\r\n        onChange={(e) => {\r\n          _amount[1] = e.target.value * 10 ** 18;\r\n        }}\r\n      />\r\n\r\n      <h4>Address 3</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => {\r\n          _to[2] = e.target.value;\r\n        }}\r\n        onChange={(e) => {\r\n          _to[2] = e.target.value;\r\n        }}\r\n      />\r\n      <h4>Amount 3</h4>\r\n      <input\r\n        type=\"number\"\r\n        onChange={(e) => {\r\n          _amount[2] = e.target.value * 10 ** 18;\r\n        }}\r\n      />\r\n\r\n      <h4>Address 4</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => {\r\n          _to[3] = e.target.value;\r\n        }}\r\n        onChange={(e) => {\r\n          _to[3] = e.target.value;\r\n        }}\r\n      />\r\n      <h4>Amount 4</h4>\r\n      <input\r\n        type=\"number\"\r\n        onChange={(e) => {\r\n          _amount[3] = e.target.value * 10 ** 18;\r\n        }}\r\n      />\r\n      <br />\r\n      <button onClick={() => sendEthBulk(_to, _amount)}>Send!</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BatchBNB;\r\n","import React, { useState } from \"react\";\r\nimport { TokenSend, AproveSender } from \"../blockchain/functions\";\r\n\r\nfunction SendToken() {\r\n  const [tokenAddress, setTokenAddress] = useState(\"\");\r\n  const _to = [];\r\n  const [_amount, setAmount] = useState();\r\n  return (\r\n    <div>\r\n      <h2>MultiSend Token</h2>\r\n      <h4>Token Address</h4>\r\n      <input type=\"text\" onChange={(e) => setTokenAddress(e.target.value)} />\r\n      <br />\r\n      <h4>Amount</h4>\r\n      <input\r\n        type=\"number\"\r\n        onChange={(e) => {\r\n          setAmount(e.target.value * 10 ** 18);\r\n        }}\r\n      />\r\n      <h4>Address 1</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => {\r\n          _to[0] = e.target.value;\r\n        }}\r\n        onChange={(e) => {\r\n          _to[0] = e.target.value;\r\n        }}\r\n      />\r\n      <h4>Address 2</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => {\r\n          _to[1] = e.target.value;\r\n        }}\r\n        onChange={(e) => {\r\n          _to[1] = e.target.value;\r\n        }}\r\n      />\r\n\r\n      <h4>Address 3</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => {\r\n          _to[2] = e.target.value;\r\n        }}\r\n        onChange={(e) => {\r\n          _to[2] = e.target.value;\r\n        }}\r\n      />\r\n\r\n      <h4>Address 4</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => {\r\n          _to[3] = e.target.value;\r\n        }}\r\n        onChange={(e) => {\r\n          _to[3] = e.target.value;\r\n        }}\r\n      />\r\n\r\n      <br />\r\n      <button onClick={() => TokenSend(tokenAddress, _to, _amount)}>\r\n        Send!\r\n      </button>\r\n      <br />\r\n      <button onClick={() => AproveSender(tokenAddress)}>Aprove Token!</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SendToken;\r\n","import React, { useState } from \"react\";\r\nimport { sendTokenbulk, AproveSender } from \"../blockchain/functions\";\r\n\r\nfunction BatchToken() {\r\n  const [tokenAddress, setTokenAddress] = useState(\"\");\r\n  const _to = [];\r\n  const _amount = [];\r\n\r\n  return (\r\n    <div>\r\n      <h2>Bulk MultiSend Token</h2>\r\n      <h4>Token Address</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => setTokenAddress(e.target.value)}\r\n        onChange={(e) => setTokenAddress(e.target.value)}\r\n      />\r\n      <br />\r\n      <h4>Address 1</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => {\r\n          _to[0] = e.target.value;\r\n        }}\r\n        onChange={(e) => {\r\n          _to[0] = e.target.value;\r\n        }}\r\n      />\r\n      <h4>Amount 1</h4>\r\n      <input\r\n        type=\"number\"\r\n        onChange={(e) => {\r\n          _amount[0] = e.target.value * 10 ** 18;\r\n        }}\r\n      />\r\n\r\n      <h4>Address 2</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => {\r\n          _to[1] = e.target.value;\r\n        }}\r\n        onChange={(e) => {\r\n          _to[1] = e.target.value;\r\n        }}\r\n      />\r\n      <h4>Amount 2</h4>\r\n      <input\r\n        type=\"number\"\r\n        onChange={(e) => {\r\n          _amount[1] = e.target.value * 10 ** 18;\r\n        }}\r\n      />\r\n\r\n      <h4>Address 3</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => {\r\n          _to[2] = e.target.value;\r\n        }}\r\n        onChange={(e) => {\r\n          _to[2] = e.target.value;\r\n        }}\r\n      />\r\n      <h4>Amount 3</h4>\r\n      <input\r\n        type=\"number\"\r\n        onChange={(e) => {\r\n          _amount[2] = e.target.value * 10 ** 18;\r\n        }}\r\n      />\r\n\r\n      <h4>Address 4</h4>\r\n      <input\r\n        type=\"text\"\r\n        onPaste={(e) => {\r\n          _to[3] = e.target.value;\r\n        }}\r\n        onChange={(e) => {\r\n          _to[3] = e.target.value;\r\n        }}\r\n      />\r\n      <h4>Amount 4</h4>\r\n      <input\r\n        type=\"number\"\r\n        onChange={(e) => {\r\n          _amount[3] = e.target.value * 10 ** 18;\r\n        }}\r\n      />\r\n      <br />\r\n      <button onClick={() => sendTokenbulk(tokenAddress, _to, _amount)}>\r\n        Send!\r\n      </button>\r\n      <br />\r\n      <button onClick={() => AproveSender(tokenAddress)}>Aprove Token!</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BatchToken;\r\n","import React, { useState } from \"react\";\r\nimport SendBNB from \"./sendBNB\";\r\nimport BatchBNB from \"./batchBNB\";\r\nimport SendToken from \"./sendToken\";\r\nimport BatchToken from \"./batchToken\";\r\n\r\nfunction Home() {\r\n  const [page, setPage] = useState(0);\r\n  return (\r\n    <div>\r\n      <button onClick={() => setPage(0)}>Send BNB</button>\r\n      <button onClick={() => setPage(1)}>Batch Send BNB</button>\r\n      <button onClick={() => setPage(2)}>Send Token</button>\r\n      <button onClick={() => setPage(3)}>Batch Send Token</button>\r\n      {page === 0 && <SendBNB />}\r\n      {page === 1 && <BatchBNB />}\r\n      {page === 2 && <SendToken />}\r\n      {page === 3 && <BatchToken />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Home from \"./pages/home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"@fontsource/roboto\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}